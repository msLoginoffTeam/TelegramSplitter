version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-splitterdb}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

  telegram-splitter-app:
    build:
      context: .
      dockerfile: BudgetSplitter.App/Dockerfile
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION:-Debug}
    restart: on-failure
    environment:
      ConnectionStrings__DefaultConnection: >
        Server=db;
        Database=${POSTGRES_DB:-splitterdb};
        Username=${POSTGRES_USER:-postgres};
        Password=${POSTGRES_PASSWORD:-postgres}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
    ports:
      - "5050:8080"
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data: